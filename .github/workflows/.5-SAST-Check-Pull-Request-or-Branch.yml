name: .5-SAST-Check-Pull-Request-or-Branch

on:
  workflow_dispatch:
  schedule:
    # Runs "Everyday at 7:05" (see https://crontab.guru)
    - cron: '5 7 * * *'
jobs:
  SAST-Check-Pull-Request-or-Branch:

    runs-on: windows-2022

# Checkout-Build-Artifact

    steps:
    - uses: actions/checkout@v3

    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1.1.3
    
    - name: Run msbuild
      run: |
          msbuild Verademo-dotnet.sln /p:DeployOnBuild=true
      
    - name: List folder contents for visual of folder contents
      run: |
         dir
   
# ZIP up the BIN folder where the bytecode is located
    - name: Zip Application Files 
      uses: vimtor/action-zip@v1
      with:
        files: .\Verademo-dotnet\bin*
        dest: verademodotnetcore.zip
        
# Download Veracode Static Pipeline Scanner     
    - name: Download Veracode Static Pipeline Scanner
      run: |
        curl https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip -o veracode.zip
        unzip -o veracode.zip        
        
# In this configuration, the Pipeline scanner will check against the baseline file and see if there are any new flaws compared to the baseline.  If there is, it will break the build.  If not, the build will continue.  
    - name: Run Veracode Static Pipeline Scanner
      continue-on-error: true
      run: >
       java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}"
       --file verademodotnetcore.zip
       --summary_output true
       #--baseline_file vc-pipeline-scanner-baseline.json
       --project_name VeraDemo-DotNetCore

# Artifact the results for later use
    - name: Archive Results.json & Results.txt from Veracode Static Pipeline Scanner
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: Pipeline Scanner Results
        path: results.*        
